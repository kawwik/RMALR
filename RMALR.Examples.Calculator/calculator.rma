start: sum { Console.WriteLine($sum.val); };

sum @returns [val] : term sum_addition [$term.val] { $val = $sum_addition.val; };

sum_addition [i] @returns [val]
    : PLUS term add[i, $term.val] sum_addition[$add.res] { $val = $sum_addition.val; }
    | MINUS term sub[i, $term.val] sum_addition[$sub.res] { $val = $sum_addition.val; }
    | { $val = i; };

add [x, y] @returns [res]: { $res = x + y; };
sub [x, y] @returns [res]: { $res = x - y; };

term: fact mult_addition [$fact.val] { $val = $mult_addition.val; };

mult_addition [i] @returns [val]
    : MULTIPLY fact mul[i, $fact.val] mult_addition [$mul.res] { $val = $mult_addition.val; }
    | DIVIDE fact div[i, $fact.val] mult_addition [$div.res] { $val = $mult_addition.val; }
    | { $val = i; };

mul [x, y] @returns [res]: { $res = x * y; };    
div [x, y] @returns [res]: { $res = x / y; };    
    
fact: choose_op choose_addition [$choose_op.val] { $val = $choose_addition.val; };

choose_addition [i] @returns [val]
    : CHOOSE choose_op choose[i, $choose_op.val] choose_addition[$choose.res] { $val = $choose_addition.val; }
    | { $val = i; }; 
    
choose [n, k] @returns [res]: 
{
    long nFact = 1;
    for (int i = 2; i <= n; i++) nFact = checked(nFact * i);
    
    long kFact = 1;
    for (int i = 2; i <= k; i++) kFact = checked(kFact * i); ;
    
    long dFact = 1;
    for (int i = 2; i <= n - k; i++) dFact = checked(dFact * i); ;
    
    $res = nFact / (kFact * dFact); 
}; 
    
choose_op @returns [val]
    : NUMBER { $val = int.Parse($NUMBER.text); }
    | LEFT_PAR sum RIGHT_PAR { $val = $sum.val; };    

PLUS: "\+";
MINUS: "-";
DIVIDE: "/";
MULTIPLY: "\*";
CHOOSE: "choose";

LEFT_PAR: "\(";
RIGHT_PAR: "\)";

NUMBER: "[0-9]+";

SPACES: " +" -> @skip;