//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/79148/RiderProjects/Lab4/Lab4\RMALR_lexer.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Lab4.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class RMALR_lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		IDENTIFIER=1, TOKEN_NAME=2, REGEXP=3, SEMICOLON=4, COLON=5, OPTION_MARK=6, 
		COMMA=7, LEFT_PAR=8, RIGHT_PAR=9, LEFT_SQUARE=10, RIGHT_SQUARE=11, ARROW=12, 
		DOLLAR=13, RETURNS=14, QUESTION_MARK=15, PLUS=16, MULTIPLY=17, QUOTE=18, 
		SKIP_RULE=19, WHITESPACES=20, NEWLINE=21, OPEN_BRACE=22, CLOSE_BRACE=23, 
		CODE=24;
	public const int
		ACTION=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "ACTION"
	};

	public static readonly string[] ruleNames = {
		"IDENTIFIER", "TOKEN_NAME", "REGEXP", "SEMICOLON", "COLON", "OPTION_MARK", 
		"COMMA", "LEFT_PAR", "RIGHT_PAR", "LEFT_SQUARE", "RIGHT_SQUARE", "ARROW", 
		"DOLLAR", "RETURNS", "QUESTION_MARK", "PLUS", "MULTIPLY", "QUOTE", "SKIP_RULE", 
		"WHITESPACES", "NEWLINE", "OPEN_BRACE", "CLOSE_BRACE", "CODE"
	};


	public RMALR_lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public RMALR_lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "';'", "':'", "'|'", "','", "'('", "')'", "'['", 
		"']'", "'->'", "'$'", "'@returns'", "'?'", "'+'", "'*'", "'\"'", "'@skip'", 
		null, null, "'{'", "'}'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "IDENTIFIER", "TOKEN_NAME", "REGEXP", "SEMICOLON", "COLON", "OPTION_MARK", 
		"COMMA", "LEFT_PAR", "RIGHT_PAR", "LEFT_SQUARE", "RIGHT_SQUARE", "ARROW", 
		"DOLLAR", "RETURNS", "QUESTION_MARK", "PLUS", "MULTIPLY", "QUOTE", "SKIP_RULE", 
		"WHITESPACES", "NEWLINE", "OPEN_BRACE", "CLOSE_BRACE", "CODE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "RMALR_lexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static RMALR_lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,24,141,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,5,0,53,8,0,10,0,12,0,56,9,0,1,1,
		1,1,5,1,60,8,1,10,1,12,1,63,9,1,1,2,1,2,4,2,67,8,2,11,2,12,2,68,1,2,1,
		2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,
		11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
		14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,
		19,4,19,118,8,19,11,19,12,19,119,1,19,1,19,1,20,3,20,125,8,20,1,20,1,20,
		1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,4,23,138,8,23,11,23,12,23,
		139,1,68,0,24,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,
		12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,
		24,2,0,1,4,1,0,97,122,3,0,65,90,95,95,97,122,1,0,65,90,8,0,32,32,36,36,
		40,43,45,57,59,59,61,61,65,90,97,122,145,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,
		0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,
		0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,
		1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,
		0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,1,46,1,0,0,0,1,48,1,0,0,0,2,50,
		1,0,0,0,4,57,1,0,0,0,6,64,1,0,0,0,8,72,1,0,0,0,10,74,1,0,0,0,12,76,1,0,
		0,0,14,78,1,0,0,0,16,80,1,0,0,0,18,82,1,0,0,0,20,84,1,0,0,0,22,86,1,0,
		0,0,24,88,1,0,0,0,26,91,1,0,0,0,28,93,1,0,0,0,30,102,1,0,0,0,32,104,1,
		0,0,0,34,106,1,0,0,0,36,108,1,0,0,0,38,110,1,0,0,0,40,117,1,0,0,0,42,124,
		1,0,0,0,44,128,1,0,0,0,46,132,1,0,0,0,48,137,1,0,0,0,50,54,7,0,0,0,51,
		53,7,1,0,0,52,51,1,0,0,0,53,56,1,0,0,0,54,52,1,0,0,0,54,55,1,0,0,0,55,
		3,1,0,0,0,56,54,1,0,0,0,57,61,7,2,0,0,58,60,7,1,0,0,59,58,1,0,0,0,60,63,
		1,0,0,0,61,59,1,0,0,0,61,62,1,0,0,0,62,5,1,0,0,0,63,61,1,0,0,0,64,66,3,
		36,17,0,65,67,9,0,0,0,66,65,1,0,0,0,67,68,1,0,0,0,68,69,1,0,0,0,68,66,
		1,0,0,0,69,70,1,0,0,0,70,71,3,36,17,0,71,7,1,0,0,0,72,73,5,59,0,0,73,9,
		1,0,0,0,74,75,5,58,0,0,75,11,1,0,0,0,76,77,5,124,0,0,77,13,1,0,0,0,78,
		79,5,44,0,0,79,15,1,0,0,0,80,81,5,40,0,0,81,17,1,0,0,0,82,83,5,41,0,0,
		83,19,1,0,0,0,84,85,5,91,0,0,85,21,1,0,0,0,86,87,5,93,0,0,87,23,1,0,0,
		0,88,89,5,45,0,0,89,90,5,62,0,0,90,25,1,0,0,0,91,92,5,36,0,0,92,27,1,0,
		0,0,93,94,5,64,0,0,94,95,5,114,0,0,95,96,5,101,0,0,96,97,5,116,0,0,97,
		98,5,117,0,0,98,99,5,114,0,0,99,100,5,110,0,0,100,101,5,115,0,0,101,29,
		1,0,0,0,102,103,5,63,0,0,103,31,1,0,0,0,104,105,5,43,0,0,105,33,1,0,0,
		0,106,107,5,42,0,0,107,35,1,0,0,0,108,109,5,34,0,0,109,37,1,0,0,0,110,
		111,5,64,0,0,111,112,5,115,0,0,112,113,5,107,0,0,113,114,5,105,0,0,114,
		115,5,112,0,0,115,39,1,0,0,0,116,118,5,32,0,0,117,116,1,0,0,0,118,119,
		1,0,0,0,119,117,1,0,0,0,119,120,1,0,0,0,120,121,1,0,0,0,121,122,6,19,0,
		0,122,41,1,0,0,0,123,125,5,13,0,0,124,123,1,0,0,0,124,125,1,0,0,0,125,
		126,1,0,0,0,126,127,5,10,0,0,127,43,1,0,0,0,128,129,5,123,0,0,129,130,
		1,0,0,0,130,131,6,21,1,0,131,45,1,0,0,0,132,133,5,125,0,0,133,134,1,0,
		0,0,134,135,6,22,2,0,135,47,1,0,0,0,136,138,7,3,0,0,137,136,1,0,0,0,138,
		139,1,0,0,0,139,137,1,0,0,0,139,140,1,0,0,0,140,49,1,0,0,0,9,0,1,54,61,
		68,119,124,137,139,3,6,0,0,5,1,0,4,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Lab4.Generated
